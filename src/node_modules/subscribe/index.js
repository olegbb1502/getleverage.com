const xhr = require('xhr')
const domEvent = require('dom-events')
const ClassList = require('class-list')
const Cookies = require('js-cookie')
const serialize = require('form-serialize')
const Ladda = require('ladda')
const querystring = require('querystring')
const { qs, qsa } = require('qs')

const emailRE = /^[-a-z0-9~!$%^&*_=+}{'?]+(\.[-a-z0-9~!$%^&*_=+}{'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(\w{2,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i

module.exports = function () {
  const $form = document.getElementById('payment')

  const $errorOutputCustomer = $form.querySelector('#customer-errors')
  const $buttonSubmit = $form.querySelector('button[type="submit"]')
  const $cardErrors = document.getElementById('card-errors')

  const query = querystring.parse(window.location.search.slice(1))

  if (query.email) {
    const $inputEmail = $form.querySelector('#email-address')
    $inputEmail.value = query.email || ''
  }

  let coupon = null
  let ref = Cookies.get('ref')
  if (ref) {
    ref = JSON.parse(decodeURIComponent(ref))
    const $refInput = $form.querySelector('#referrer')
    $refInput.value = ref.who
    $refInput.disabled = true
    coupon = ref.coupon
  }

  const ladda = Ladda.create($buttonSubmit)

  function validateForm() {
    let valid = true
    const inputs = $form.querySelectorAll('input')

    for (let i = 0; i < inputs.length; i++) {
      const inp = inputs[i]
      if (isInvalid(inp)) {
        setInvalid(inp)
        valid = false
      }
    }

    return valid
  }

  function isInvalid(el) {
    if (el.type === 'checkbox' && !el.checked)
      return true

    if (el.name === 'email' && !emailRE.test(el.value))
      return true

    if (!el.value && el.dataset.message)
      return true

    return false
  }

  function removeInvalid(el) {
    if (!el.id) {
      return;
    }

    ClassList(el).remove('invalid')
    const err = $form.querySelector('.error[for=' + el.id + ']')
    if (err) {
      err.style = 'display: none'
    }
  }

  function setInvalid(el) {
    ClassList(el).add('invalid')
    const err = $form.querySelector('.error[for=' + el.id + ']')
    if (err) {
      err.textContent = el.dataset.message
      err.style = 'display: block'
    }
  }

  window.card.addEventListener('change', function(e) {
    if (e.error) {
      $cardErrors.textContent = e.error.message
      $cardErrors.style = 'padding-top: 15px'
    } else {
      $cardErrors.textContent = ''
      $cardErrors.style = 'padding-top: 0'
    }
  })

  $form.addEventListener('blur', function(ev) {
    const el = ev.target

    if (el.tagName !== 'INPUT')
      return

    if (el.type !== 'checkbox')
      el.value = el.value.trim()

    if (isInvalid(el)) {
      setInvalid(el)
    } else {
      removeInvalid(el)
    }

  }, true)

  $form.addEventListener('focus', function(ev) {
    const el = ev.target
    if (el.tagName !== 'INPUT')
      return

    removeInvalid(el)
  }, true)

  domEvent.on($form, 'submit', function (event) {
    event.preventDefault()
  })

  domEvent.on($buttonSubmit, 'click', function (event) {
    event.preventDefault()
    $errorOutputCustomer.textContent = '';

    if (!validateForm()) {
      return
    }

    ladda.start()

    window.stripe.createToken(window.card).then(function (result) {
      if (result.error) {
        $cardErrors.textContent = result.error.message
        ladda.stop()
        return
      }

      const payload = serialize($form, { hash: true })
      payload.stripeToken = result.token.id
      payload.coupon = coupon

      const opts = {
        url: `${window.endpoint}/subscribe/submit`,
        body: JSON.stringify(payload),
        headers: {
          'Content-Type': 'application/json'
        },
        method: 'POST'
      }

      xhr(opts, function (err, res, body) {
        ladda.stop()

        if (err) {
          $errorOutputCustomer.textContent = err.message;
          return;
        }

        if (res.statusCode !== 201) {
          let msg
          body = JSON.parse(body);

          if (body.message) {
            msg = body.message
          }
          else if (body.errors) {
            msg = Object.values(body.errors).map(e => e.msg).join(' ')
          }

          $errorOutputCustomer.textContent = msg;
          return;
        }

        const name = [payload.firstName, payload.lastName].join(' ')

        window.location = [
          window.location.origin,
          '/subscribe/complete?',
          querystring.stringify({ name: name, email: payload.email })
        ].join('')
      })
    })
  })
}
